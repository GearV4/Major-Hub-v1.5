local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v34()local v43,v44=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v44 * 256) + v43 ;end v35=nil;function v35()local v45,v46,v47,v48=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v48 * (48013535 -31236319)) + (v47 * 65536) + (v46 * 256) + v45 ;end v36=nil;v29=3;end if (v29==5) then v41=nil;function v41(v49,v50,v51)local v52=0;local v53;local v54;local v55;while true do if (1==v52) then v55=v49[3];return function(...)local v89=v53;local v90=v54;local v91=v55;local v92=v39;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v113=0,v97 do if (v113>=v91) then v95[v113-v91 ]=v96[v113 + 1 ];else v99[v113]=v96[v113 + 1 ];end end local v100=(v97-v91) + (1066 -(68 + 997)) ;local v101;local v102;while true do v101=v89[v93];v102=v101[1];if (v102<=39) then if (v102<=19) then if (v102<=9) then if (v102<=4) then if (v102<=(1271 -(226 + 1044))) then if (v102==0) then local v139=v101[2];local v140={};for v216=1, #v98 do local v217=0;local v218;while true do if (v217==0) then v218=v98[v216];for v346=0, #v218 do local v347=0;local v348;local v349;local v350;while true do if (v347==0) then v348=v218[v346];v349=v348[1];v347=1;end if (v347==1) then v350=v348[2];if ((v349==v99) and (v350>=v139)) then v140[v350]=v349[v350];v348[1]=v140;end break;end end end break;end end end else local v141=0;local v142;local v143;local v144;while true do if (1==v141) then v144={};v143=v18({},{[v7("\77\126\126\139\250\142\106","\235\18\33\23\229\158")]=function(v320,v321)local v322=v144[v321];return v322[4 -3 ][v322[2]];end,[v7("\111\133\207\190\71\179\207\191\85\162","\219\48\218\161")]=function(v323,v324,v325)local v326=0;local v327;while true do if (v326==0) then v327=v144[v324];v327[1][v327[2]]=v325;break;end end end});v141=2;end if (2==v141) then for v328=118 -(32 + 85) ,v101[4] do v93=v93 + 1 ;local v329=v89[v93];if (v329[1]==25) then v144[v328-1 ]={v99,v329[3]};else v144[v328-1 ]={v50,v329[3]};end v98[ #v98 + 1 ]=v144;end v99[v101[2]]=v41(v142,v143,v51);break;end if (v141==0) then v142=v90[v101[3]];v143=nil;v141=1;end end end elseif (v102<=2) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==3) then local v228=0;local v229;while true do if (v228==0) then v229=v101[2];do return v21(v99,v229,v94);end break;end end else for v299=v101[2],v101[3 + 0 ] do v99[v299]=nil;end end elseif (v102<=6) then if (v102>5) then local v145=0;local v146;while true do if (v145==0) then v146=v101[2];v99[v146]=v99[v146]();break;end end elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=7) then local v147=v101[2];local v148=v99[v147];local v149=v99[v147 + 2 ];if (v149>0) then if (v148>v99[v147 + 1 ]) then v93=v101[3];else v99[v147 + 3 ]=v148;end elseif (v148<v99[v147 + 1 + 0 ]) then v93=v101[3];else v99[v147 + (960 -(892 + 65)) ]=v148;end elseif (v102==8) then v99[v101[2]]=v50[v101[3]];else v99[v101[2]][v101[3]]=v101[4];end elseif (v102<=(32 -18)) then if (v102<=11) then if (v102>10) then v99[v101[2]]=v101[3]~=0 ;else local v151=0;local v152;local v153;local v154;local v155;while true do if (v151==0) then v152=v101[2];v153,v154=v92(v99[v152](v99[v152 + 1 ]));v151=1;end if (v151==2) then for v335=v152,v94 do local v336=0;while true do if (v336==0) then v155=v155 + 1 ;v99[v335]=v153[v155];break;end end end break;end if (1==v151) then v94=(v154 + v152) -1 ;v155=0;v151=2;end end end elseif (v102<=(21 -9)) then if  not v99[v101[2]] then v93=v93 + (1 -0) ;else v93=v101[3];end elseif (v102==13) then if ((v101[3]==v7("\219\84\82\127","\128\132\17\28\41\187\47")) or (v101[3]==v7("\6\55\18\60\88\15\36","\61\97\82\102\90"))) then v99[v101[352 -(87 + 263) ]]=v51;else v99[v101[2]]=v51[v101[3]];end else local v236=v101[2];v99[v236](v99[v236 + 1 ]);end elseif (v102<=16) then if (v102==15) then v99[v101[2]]=v50[v101[3]];else local v158=v101[2];local v159,v160=v92(v99[v158](v21(v99,v158 + 1 ,v101[3])));v94=(v160 + v158) -1 ;local v161=0;for v219=v158,v94 do local v220=0;while true do if (0==v220) then v161=v161 + 1 ;v99[v219]=v159[v161];break;end end end end elseif (v102<=17) then v93=v101[3];elseif (v102>18) then v99[v101[2]]();else local v237=0;local v238;local v239;local v240;local v241;while true do if (2==v237) then for v374=v238,v94 do local v375=0;while true do if (v375==0) then v241=v241 + 1 ;v99[v374]=v239[v241];break;end end end break;end if (1==v237) then v94=(v240 + v238) -1 ;v241=0;v237=2;end if (v237==0) then v238=v101[2];v239,v240=v92(v99[v238](v21(v99,v238 + 1 ,v94)));v237=1;end end end elseif (v102<=29) then if (v102<=24) then if (v102<=21) then if (v102>(200 -(67 + 113))) then v99[v101[2]][v101[3]]=v99[v101[4]];elseif ((v101[3]==v7("\147\11\133\125","\105\204\78\203\43\167\55\126")) or (v101[3]==v7("\162\175\55\24\22\10\209","\49\197\202\67\126\115\100\167"))) then v99[v101[2]]=v51;else v99[v101[2]]=v51[v101[3]];end elseif (v102<=22) then local v165=0;local v166;while true do if (v165==0) then v166=v101[2];do return v21(v99,v166,v94);end break;end end elseif (v102>23) then local v245=v101[2];v99[v245]=v99[v245](v21(v99,v245 + 1 ,v94));else local v247=0;local v248;local v249;local v250;local v251;while true do if (v247==1) then v94=(v250 + v248) -1 ;v251=0;v247=2;end if (v247==0) then v248=v101[2];v249,v250=v92(v99[v248](v21(v99,v248 + 1 ,v101[3])));v247=1;end if (v247==2) then for v376=v248,v94 do v251=v251 + 1 ;v99[v376]=v249[v251];end break;end end end elseif (v102<=26) then if (v102==25) then v99[v101[2]]=v99[v101[3]];else local v169=0;local v170;while true do if (0==v169) then v170=v101[2];do return v99[v170](v21(v99,v170 + 1 ,v101[3 + 0 ]));end break;end end end elseif (v102<=27) then v99[v101[2]][v101[7 -4 ]]=v99[v101[4]];elseif (v102==28) then local v252=v101[2 + 0 ];v99[v252]=v99[v252]();else local v254=0;local v255;local v256;while true do if (v254==0) then v255=v101[2];v256=v99[v101[3]];v254=1;end if (v254==1) then v99[v255 + 1 ]=v256;v99[v255]=v256[v101[4]];break;end end end elseif (v102<=34) then if (v102<=31) then if (v102>30) then v99[v101[2]]=v101[3]~=0 ;else local v174=0;local v175;local v176;local v177;while true do if (1==v174) then v177=v99[v175 + 2 ];if (v177>0) then if (v176>v99[v175 + 1 ]) then v93=v101[3];else v99[v175 + (11 -8) ]=v176;end elseif (v176<v99[v175 + 1 ]) then v93=v101[3];else v99[v175 + 3 ]=v176;end break;end if (0==v174) then v175=v101[2];v176=v99[v175];v174=1;end end end elseif (v102<=(984 -(802 + 150))) then local v178=v101[2];local v179=v99[v178];for v221=v178 + 1 ,v94 do v15(v179,v99[v221]);end elseif (v102>33) then v99[v101[5 -3 ]]=v99[v101[3]] + v101[4] ;else v99[v101[2]]={};end elseif (v102<=36) then if (v102>35) then local v180=0;local v181;while true do if (v180==0) then v181=v101[2];do return v99[v181](v21(v99,v181 + (1 -0) ,v101[3]));end break;end end else v99[v101[2]]=v41(v90[v101[3]],nil,v51);end elseif (v102<=37) then local v183=v101[2];v99[v183](v99[v183 + 1 ]);elseif (v102>38) then local v259=0;local v260;local v261;local v262;local v263;while true do if (v259==2) then for v379=v260,v94 do v263=v263 + 1 ;v99[v379]=v261[v263];end break;end if (v259==0) then v260=v101[2];v261,v262=v92(v99[v260](v99[v260 + 1 ]));v259=1;end if (v259==1) then v94=(v262 + v260) -1 ;v263=0;v259=2;end end else local v264=0;local v265;while true do if (v264==0) then v265=v101[2];v99[v265](v21(v99,v265 + 1 + 0 ,v94));break;end end end elseif (v102<=(1056 -(915 + 82))) then if (v102<=49) then if (v102<=44) then if (v102<=41) then if (v102==40) then v99[v101[2]]();else v99[v101[2]]=v99[v101[3]]%v101[4] ;end elseif (v102<=(118 -76)) then do return;end elseif (v102==43) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else local v267=v101[2];v99[v267]=v99[v267](v21(v99,v267 + 1 + 0 ,v101[3]));end elseif (v102<=46) then if (v102==45) then v99[v101[2]]=v99[v101[3]] + v101[4] ;else v99[v101[2]]=v101[3];end elseif (v102<=47) then v99[v101[2 -0 ]]=v99[v101[3]]%v101[4] ;elseif (v102==48) then v99[v101[2]]=v101[1190 -(1069 + 118) ];else local v271=v101[2];local v272=v99[v101[3]];v99[v271 + 1 ]=v272;v99[v271]=v272[v101[4]];end elseif (v102<=(122 -68)) then if (v102<=51) then if (v102>50) then for v222=v101[2],v101[3] do v99[v222]=nil;end else local v189=0;local v190;local v191;while true do if (v189==0) then v190=v101[2];v191=v99[v190];v189=1;end if (v189==1) then for v342=v190 + 1 ,v94 do v15(v191,v99[v342]);end break;end end end elseif (v102<=(113 -61)) then v99[v101[1 + 1 ]]=v99[v101[3]]%v99[v101[4]] ;elseif (v102>53) then v99[v101[2]]=v99[v101[3]];else v99[v101[2]]={};end elseif (v102<=56) then if (v102==55) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif  not v99[v101[2]] then v93=v93 + (1 -0) ;else v93=v101[3];end elseif (v102<=57) then v99[v101[2]]=v101[3 + 0 ] + v99[v101[4]] ;elseif (v102==58) then if (v99[v101[2]]==v101[4]) then v93=v93 + (792 -(368 + 423)) ;else v93=v101[3];end else v99[v101[2]]= #v99[v101[3]];end elseif (v102<=69) then if (v102<=64) then if (v102<=61) then if (v102==60) then v99[v101[2]]=v99[v101[3]][v101[4]];else v93=v101[3];end elseif (v102<=(194 -132)) then v99[v101[2]][v101[21 -(10 + 8) ]]=v101[4];elseif (v102==63) then do return v99[v101[2]]();end else local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==1) then v94=(v284 + v282) -1 ;v285=0;v281=2;end if (v281==2) then for v382=v282,v94 do v285=v285 + 1 ;v99[v382]=v283[v285];end break;end if (v281==0) then v282=v101[2];v283,v284=v92(v99[v282](v21(v99,v282 + 1 ,v94)));v281=1;end end end elseif (v102<=66) then if (v102>65) then local v201=0;local v202;local v203;local v204;while true do if (v201==2) then if (v203>0) then if (v204<=v99[v202 + (443 -(416 + 26)) ]) then v93=v101[3];v99[v202 + 3 ]=v204;end elseif (v204>=v99[v202 + 1 ]) then v93=v101[3];v99[v202 + (9 -6) ]=v204;end break;end if (v201==1) then v204=v99[v202] + v203 ;v99[v202]=v204;v201=2;end if (v201==0) then v202=v101[2];v203=v99[v202 + (7 -5) ];v201=1;end end else local v205=0;local v206;while true do if (v205==0) then v206=v101[2];v99[v206](v21(v99,v206 + 1 + 0 ,v101[3]));break;end end end elseif (v102<=67) then local v207=0;local v208;while true do if (v207==0) then v208=v101[2];v99[v208]=v99[v208](v21(v99,v208 + 1 ,v101[4 -1 ]));break;end end elseif (v102==68) then local v286=0;local v287;local v288;local v289;while true do if (v286==1) then v289=v99[v287] + v288 ;v99[v287]=v289;v286=2;end if (v286==2) then if (v288>0) then if (v289<=v99[v287 + 1 ]) then v93=v101[3];v99[v287 + 3 ]=v289;end elseif (v289>=v99[v287 + 1 ]) then local v419=0;while true do if (v419==0) then v93=v101[3];v99[v287 + 3 ]=v289;break;end end end break;end if (v286==0) then v287=v101[2];v288=v99[v287 + 2 ];v286=1;end end else v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;end elseif (v102<=(512 -(145 + 293))) then if (v102<=(501 -(44 + 386))) then if (v102==70) then local v209=v101[2];v99[v209](v21(v99,v209 + (1487 -(998 + 488)) ,v94));else do return;end end elseif (v102<=72) then local v210=0;local v211;while true do if (v210==0) then v211=v101[1 + 1 ];v99[v211](v21(v99,v211 + 1 ,v101[3]));break;end end elseif (v102>73) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3 + 0 ];end else local v291=v101[774 -(201 + 571) ];v99[v291]=v99[v291](v21(v99,v291 + 1 ,v94));end elseif (v102<=76) then if (v102>(1213 -(116 + 1022))) then v99[v101[8 -6 ]]=v41(v90[v101[3]],nil,v51);else v99[v101[2]]= #v99[v101[3]];end elseif (v102<=77) then local v214=v101[2];local v215={};for v224=1, #v98 do local v225=0;local v226;while true do if (v225==0) then v226=v98[v224];for v365=0, #v226 do local v366=0;local v367;local v368;local v369;while true do if (v366==1) then v369=v367[2];if ((v368==v99) and (v369>=v214)) then v215[v369]=v368[v369];v367[1]=v215;end break;end if (v366==0) then v367=v226[v365];v368=v367[1];v366=1;end end end break;end end end elseif (v102>(46 + 32)) then local v293=0;local v294;local v295;local v296;while true do if (v293==0) then v294=v90[v101[3]];v295=nil;v293=1;end if (1==v293) then v296={};v295=v18({},{[v7("\8\100\214\39\132\83\70","\62\87\59\191\73\224\54")]=function(v385,v386)local v387=0;local v388;while true do if (v387==0) then v388=v296[v386];return v388[1][v388[2]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v389,v390,v391)local v392=0;local v393;while true do if (v392==0) then v393=v296[v390];v393[1][v393[2]]=v391;break;end end end});v293=2;end if (v293==2) then for v394=1,v101[4] do local v395=0;local v396;while true do if (v395==0) then v93=v93 + 1 ;v396=v89[v93];v395=1;end if (1==v395) then if (v396[1]==25) then v296[v394-1 ]={v99,v396[3]};else v296[v394-(3 -2) ]={v50,v396[3]};end v98[ #v98 + 1 ]=v296;break;end end end v99[v101[2]]=v41(v294,v295,v51);break;end end else do return v99[v101[2]]();end end v93=v93 + 1 ;end end;end if (v52==0) then v53=v49[1];v54=v49[2];v52=1;end end end return v41(v40(),{},v28)(...);end if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\133\57","\168\171\23\68\52\157\83"),function(v56)if (v9(v56,2)==79) then v31=v8(v11(v56,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v10(v8(v56,16));if v31 then local v125=v13(v81,v31);v31=nil;return v125;else return v81;end break;end end end end);v32=nil;v29=1;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v57==2) then for v103=1,v35() do local v104=v33();if (v32(v104,1,1)==0) then local v117=v32(v104,2,3);local v118=v32(v104,4,933 -(214 + 713) );local v119={v34(),v34(),nil,nil};if (v117==0) then v119[3]=v34();v119[4]=v34();elseif (v117==(1 + 0)) then v119[3]=v35();elseif (v117==2) then v119[3]=v35() -(2^16) ;elseif (v117==3) then v119[3]=v35() -(2^16) ;v119[4]=v34();end if (v32(v118,1,1 + 0 )==1) then v119[2]=v63[v119[2]];end if (v32(v118,2,879 -(282 + 595) )==(1638 -(1523 + 114))) then v119[3]=v63[v119[3 + 0 ]];end if (v32(v118,3,3)==1) then v119[4]=v63[v119[4]];end v58[v103]=v119;end end for v105=1,v35() do v59[v105-(1 -0) ]=v40();end return v61;end if (v57==0) then v58={};v59={};v60={};v61={v58,v59,nil,v60};v57=1;end if (1==v57) then v62=v35();v63={};for v107=1,v62 do local v108=v33();local v109;if (v108==1) then v109=v33()~=0 ;elseif (v108==2) then v109=v36();elseif (v108==3) then v109=v37();end v63[v107]=v109;end v61[571 -(367 + 201) ]=v33();v57=2;end end end v29=5;end if (v29==1) then function v32(v64,v65,v66)if v66 then local v82=0;local v83;while true do if (v82==0) then v83=(v64/(2^(v65-1)))%(2^(((v66-1) -(v65-(2 -1))) + 1)) ;return v83-(v83%1) ;end end else local v84=2^(v65-1) ;return (((v64%(v84 + v84))>=v84) and 1) or 0 ;end end v33=nil;function v33()local v67=0;local v68;while true do if (v67==0) then v68=v9(v27,v30,v30);v30=v30 + 1 ;v67=1;end if (1==v67) then return v68;end end end v34=nil;v29=2;end if (v29==3) then function v36()local v69=0;local v70;local v71;local v72;local v73;local v74;local v75;while true do if (v69==2) then v74=v32(v71,21,31);v75=((v32(v71,82 -50 )==1) and  -1) or 1 ;v69=3;end if (3==v69) then if (v74==0) then if (v73==0) then return v75 * 0 ;else local v126=0;while true do if (v126==0) then v74=1;v72=0;break;end end end elseif (v74==(2666 -(555 + 64))) then return ((v73==0) and (v75 * (1/0))) or (v75 * NaN) ;end return v16(v75,v74-1023 ) * (v72 + (v73/(2^52))) ;end if (v69==0) then v70=v35();v71=v35();v69=1;end if (v69==1) then v72=1;v73=(v32(v71,1,38 -18 ) * (2^32)) + v70 ;v69=2;end end end v37=nil;function v37(v76)local v77=0;local v78;local v79;while true do if (v77==1) then v78=v11(v27,v30,(v30 + v76) -1 );v30=v30 + v76 ;v77=2;end if (v77==0) then v78=nil;if  not v76 then local v116=0;while true do if (0==v116) then v76=v35();if (v76==(931 -(857 + 74))) then return "";end break;end end end v77=1;end if (v77==3) then return v14(v79);end if (2==v77) then v79={};for v111=1, #v78 do v79[v111]=v10(v9(v11(v78,v111,v111)));end v77=3;end end end v38=v35;v29=4;end end end vv17(),...);
-- âš ï¸ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.0) ~  Much Love, Ferib 

]]--
